%# Copyright (C) 2019 Stefan Schl√∂gl <schinzilord@octarisk.com>
%#
%# This program is free software; you can redistribute it and/or modify it under
%# the terms of the GNU General Public License as published by the Free Software
%# Foundation; either version 3 of the License, or (at your option) any later
%# version.
%#
%# This program is distributed in the hope that it will be useful, but WITHOUT
%# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
%# details.
%#
%# You should have received a copy of the GNU General Public License along with
%# this program; if not, see <http://www.gnu.org/licenses/>.
 
%# -*- texinfo -*-
%# @deftypefn {Function File} {[@var{score} ] =} get_readinessscore(@var{isocode})
%#
%# Map the ISO-2 currency code to ND-GAIN readiness risk score.
%# See https://gain.nd.edu/our-work/country-index/methodology/ for further information.
%# @end deftypefn

function score = get_readinessscore(isocode)

if nargin < 1
    error('get_readinessscore: no country iso code provided.\n');
end

if nargin > 1
    fprintf('get_readinessscore: ignoring further argument(s).\n');
end
if ~(ischar(isocode))
    error('get_readinessscore: isocode not a string >>%s<<..\n',any2str(isocode));
end

% dictionary with all iso codes and their mapping to the INFORM risk score:

% manual update: map Hong Kong (HK) and Taiwan (TW) to China (CN)
if strcmpi(isocode,'TW') || strcmpi(isocode,'HK')
	isocode = 'CN';
end

% map iso-2 code to iso-3 code:
iso3 = map_country_isocodes(isocode);


% last update from https://gain.nd.edu/our-work/country-index/rankings/ 20230331: 2020 data
inform = struct(   ...
                'AFG',0.239126606182841, ...
				'ALB',0.409452983371096, ...
				'DZA',0.33068109430508, ...
				'AND',0.463988100167141, ...
				'AGO',0.262540372073311, ...
				'ATG',0.445502844232243, ...
				'ARG',0.382984241046119, ...
				'ARM',0.507571569291164, ...
				'AUS',0.690156787839352, ...
				'AUT',0.68665626105961, ...
				'AZE',0.438662422225791, ...
				'BHS',0.424584161286116, ...
				'BHR',0.506402068441481, ...
				'BGD',0.278169384035553, ...
				'BRB',0.536692412450074, ...
				'BLR',0.501969625748656, ...
				'BEL',0.600662947200381, ...
				'BLZ',0.334759598880295, ...
				'BEN',0.336605947759305, ...
				'BTN',0.476220953489274, ...
				'BOL',0.286764268477931, ...
				'BIH',0.362408329731066, ...
				'BWA',0.432771276990344, ...
				'BRA',0.35771468951001, ...
				'BRN',0.533100628846571, ...
				'BGR',0.464001251102273, ...
				'BFA',0.290420088841339, ...
				'BDI',0.267934246229784, ...
				'KHM',0.281663243165067, ...
				'CMR',0.258881746461065, ...
				'CAN',0.651613874467236, ...
				'CPV',0.443865532361666, ...
				'CAF',0.135595938472813, ...
				'TCD',0.191685215161874, ...
				'CHL',0.54272754798027, ...
				'CHN',0.552967567166084, ...
				'COL',0.378494336398517, ...
				'COM',0.280681881384671, ...
				'COG',0.219282389752764, ...
				'COD',0.207552355543295, ...
				'CRI',0.45827917336291, ...
				'CIV',0.305080511398472, ...
				'HRV',0.488179565408804, ...
				'CUB',0.34975367562749, ...
				'CYP',0.516949897111718, ...
				'CZE',0.555018810496946, ...
				'DNK',0.77545846168407, ...
				'DJI',0.329372435651344, ...
				'DMA',0.518993728865508, ...
				'DOM',0.355894581490989, ...
				'ECU',0.335181308998329, ...
				'EGY',0.343858525274108, ...
				'SLV',0.346666807511202, ...
				'GNQ',0.236992667746831, ...
				'ERI',0.212355547875245, ...
				'EST',0.618477834692047, ...
				'ETH',0.306121825323745, ...
				'FJI',0.472425835105015, ...
				'FIN',0.750667267315567, ...
				'FRA',0.648524987466746, ...
				'GAB',0.297962162664258, ...
				'GMB',0.328818963998126, ...
				'GEO',0.566164135033675, ...
				'DEU',0.690177173155596, ...
				'GHA',0.350604238196081, ...
				'GRC',0.531361436157473, ...
				'GRD',0.462066615617136, ...
				'GTM',0.315931525390814, ...
				'GIN',0.312703709206483, ...
				'GNB',0.269287965355595, ...
				'GUY',0.312166775035405, ...
				'HTI',0.231958824501077, ...
				'HND',0.267311064883928, ...
				'HUN',0.499735629062906, ...
				'ISL',0.716842151233647, ...
				'IND',0.385969707771795, ...
				'IDN',0.386502075192424, ...
				'IRN',0.388919933311032, ...
				'IRQ',0.298124620928909, ...
				'IRL',0.598480012906524, ...
				'ISR',0.54192577031707, ...
				'ITA',0.522700128120751, ...
				'JAM',0.403371202065648, ...
				'JPN',0.68952534602986, ...
				'JOR',0.407491599159921, ...
				'KAZ',0.517119451686512, ...
				'KEN',0.299105690830078, ...
				'KIR',0.449909035589355, ...
				'PRK',0.343975443639431, ...
				'KOR',0.724714631564898, ...
				'KWT',0.466524933236865, ...
				'KGZ',0.393521644436588, ...
				'LAO',0.328270922381999, ...
				'LVA',0.581806615798219, ...
				'LBN',0.29055677444246, ...
				'LSO',0.311348178491256, ...
				'LBR',0.278468506718157, ...
				'LBY',0.270715042092784, ...
				'LIE',0.646897020923828, ...
				'LTU',0.595683719899232, ...
				'LUX',0.672333281966928, ...
				'MKD',0.469304159370385, ...
				'MDG',0.266448672657836, ...
				'MWI',0.287902079851243, ...
				'MYS',0.51003132021892, ...
				'MDV',0.436463048293251, ...
				'MLI',0.292367235704986, ...
				'MLT',0.509800393582871, ...
				'MHL',0.358853804071648, ...
				'MRT',0.357162416638664, ...
				'MUS',0.568485093437368, ...
				'MEX',0.366048158951361, ...
				'FSM',0.354059187904058, ...
				'MDA',0.433954007376656, ...
				'MCO',0.747460170235827, ...
				'MNG',0.460150763503009, ...
				'MNE',0.469314494630395, ...
				'MAR',0.432120035971812, ...
				'MOZ',0.26856351051554, ...
				'MMR',0.282121928535599, ...
				'NAM',0.376780474287339, ...
				'NRU',0.488117997362031, ...
				'NPL',0.355569664079479, ...
				'NLD',0.684251309478929, ...
				'NZL',0.704072479187762, ...
				'NIC',0.27192623003162, ...
				'NER',0.333103573230323, ...
				'NGA',0.250858246124371, ...
				'NOR',0.765146394646355, ...
				'OMN',0.505513017825569, ...
				'PAK',0.310739347542506, ...
				'PLW',0.423944653490986, ...
				'PAN',0.380313392428509, ...
				'PNG',0.284290881932771, ...
				'PRY',0.363232490634256, ...
				'PER',0.405183276769228, ...
				'PHL',0.340289877118321, ...
				'POL',0.545914250448128, ...
				'PRT',0.578285064887328, ...
				'QAT',0.534836526441998, ...
				'ROU',0.435258172436792, ...
				'RUS',0.550336507662827, ...
				'RWA',0.425694749993365, ...
				'KNA',0.566297662352556, ...
				'LCA',0.445981459370643, ...
				'VCT',0.476475038417491, ...
				'WSM',0.428495697547221, ...
				'SMR',0.631015375943487, ...
				'STP',0.36161655065492, ...
				'SAU',0.542993951930033, ...
				'SEN',0.349655224311338, ...
				'SRB',0.445012806412086, ...
				'SYC',0.458107227599462, ...
				'SLE',0.316063662782151, ...
				'SGP',0.804268920793762, ...
				'SVK',0.513056872831698, ...
				'SVN',0.603749115548556, ...
				'SLB',0.41448385967728, ...
				'SOM',0.35616184055415, ...
				'ZAF',0.363998680425148, ...
				'ESP',0.536000249437802, ...
				'LKA',0.398112578348733, ...
				'SDN',0.263189013564703, ...
				'SUR',0.331987401426588, ...
				'SWZ',0.311584815572833, ...
				'SWE',0.722726257586917, ...
				'CHE',0.693764112944982, ...
				'SYR',0.22701644796155, ...
				'TJK',0.329314923778286, ...
				'TZA',0.301620405654246, ...
				'THA',0.48662099368828, ...
				'TLS',0.369816205867742, ...
				'TGO',0.348885991950586, ...
				'TON',0.410171593306513, ...
				'TTO',0.340518565921696, ...
				'TUN',0.439754081665497, ...
				'TUR',0.484070717444201, ...
				'TKM',0.235173717284733, ...
				'TUV',0.586165716786722, ...
				'UGA',0.287850209612222, ...
				'UKR',0.427213910082223, ...
				'ARE',0.584618000723111, ...
				'GBR',0.683382095357435, ...
				'USA',0.653280669789446, ...
				'URY',0.521350585399937, ...
				'UZB',0.385858175863724, ...
				'VUT',0.357798268517472, ...
				'VEN',0.190085207630194, ...
				'VNM',0.42513663297744, ...
				'YEM',0.247884481371503, ...
				'ZMB',0.321071576240754, ...
				'ZWE',0.215652875914677
            );
                       
if ~(isfield(inform,upper(iso3)))
    error('get_readinessscore: no valid country iso code >>%s<< provided.\n',isocode);
end                       
% map the string to the number 1:length(dcc_cell):
score = getfield(inform,upper(iso3));
end 

%!assert(get_readinessscore('DE'),0.690177173155596)

